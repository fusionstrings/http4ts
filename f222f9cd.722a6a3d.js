/*! For license information please see f222f9cd.722a6a3d.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{140:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return O})),n.d(t,"metadata",(function(){return g})),n.d(t,"rightToc",(function(){return v})),n.d(t,"default",(function(){return w}));var r=n(1),a=n(6),o=n(0),s=n.n(o),i=n(145),c=n(154);var p=function(){return Object(o.useContext)(c.a)},l=n(147),b=n.n(l),u=n(139),d=n.n(u);const m=37,h=39;var f=function(e){const{block:t,children:n,defaultValue:r,values:a,groupId:i}=e,{tabGroupChoices:c,setTabGroupChoices:l}=p(),[u,f]=Object(o.useState)(r);if(null!=i){const e=c[i];null!=e&&e!==u&&f(e)}const j=e=>{f(e),null!=i&&l(i,e)},O=[];return s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:b()("tabs",{"tabs--block":t})},a.map(({value:e,label:t})=>s.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":u===e,className:b()("tab-item",d.a.tabItem,{"tab-item--active":u===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,t,n)=>{switch(n.keyCode){case h:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case m:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(O,e.target,e),onFocus:()=>j(e),onClick:()=>j(e)},t))),s.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},o.Children.toArray(n).filter(e=>e.props.value===u)[0]))};var j=function(e){return s.a.createElement("div",null,e.children)},O={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},g={id:"welcome/getting-started",title:"Getting Started",description:"_Http4ts_ is a minimal HTTP library for JavaScript environments ([Node.js](https://nodejs.org), [Deno](https://Deno.land/) etc.) implementing the pattern of [server as a function](https://monkey.org/~marius/funsrv.pdf). In _http4ts_, a server is just a function with the following signature:",source:"@site/docs/welcome/getting-started.mdx",permalink:"/docs/welcome/getting-started",editUrl:"https://github.com/http4ts/http4ts/edit/master/website/docs/welcome/getting-started.mdx",sidebar_label:"Getting Started",sidebar:"someSidebar",next:{title:"Philosophy",permalink:"/docs/welcome/philosophy"}},v=[{value:"Binding to Node.js",id:"binding-to-nodejs",children:[]},{value:"Binding to Deno",id:"binding-to-deno",children:[]},{value:"Example Project",id:"example-project",children:[]}],y={rightToc:v};function w(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},y,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Http4ts")," is a minimal HTTP library for JavaScript environments (",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://nodejs.org"}),"Node.js"),", ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://Deno.land/"}),"Deno")," etc.) implementing the pattern of ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://monkey.org/~marius/funsrv.pdf"}),"server as a function"),". In ",Object(i.b)("em",{parentName:"p"},"http4ts"),", a server is just a function with the following signature:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"type HttpHandler = (req: HttpRequest) => HttpResponse | Promise<HttpResponse>;\n")),Object(i.b)("p",null,"See the simple server application examples, one for ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/http4ts/http4ts/tree/master/src/deno/examples"}),"deno")," and another for ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/http4ts/http4ts/tree/master/src/node/examples"}),"Node.js"),"."),Object(i.b)("h1",{id:"installation"},"Installation"),Object(i.b)(f,{defaultValue:"node",values:[{label:"Node.js",value:"node"},{label:"Deno",value:"deno"}],mdxType:"Tabs"},Object(i.b)(j,{value:"node",mdxType:"TabItem"},Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Http4ts")," is available via npm. You can install it using the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"npm install http4ts\n")),Object(i.b)("h3",{id:"binding-to-nodejs"},"Binding to Node.js"),Object(i.b)("p",null,"In order to use this library in Node.js, you have to bind the ",Object(i.b)("inlineCode",{parentName:"p"},"HttpHandler")," to the Node.js HTTP server. ",Object(i.b)("em",{parentName:"p"},"Http4ts")," supplies a function called ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/http4ts/http4ts/blob/master/src/node/server.ts"}),Object(i.b)("inlineCode",{parentName:"a"},"toNodeRequestListener"))," to bind an ",Object(i.b)("inlineCode",{parentName:"p"},"HttpHandler")," to the Node.js server."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import * as http from "http";\n\nimport {\n  HttpRequest,\n  HttpStatus,\n  toNodeRequestListener,\n  stringBody,\n  res\n} from "http4ts";\n\nasync function handler(req: HttpRequest) {\n  // 1. Write the handler as a function that returns response\n  return res({\n    body: stringBody("Hello world!"),\n    status: HttpStatus.OK\n  });\n}\n\nconst server = http.createServer(\n  toNodeRequestListener(handler) // 2. Connect the handler to the node.js server\n);\n\nconst hostname = "127.0.0.1";\nconst port = 3000;\n\nserver.listen(port, hostname, () => {\n  // 3. Start your node server as you were before\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n'))),Object(i.b)(j,{value:"deno",mdxType:"TabItem"},Object(i.b)("p",null,"In Deno, it is possible to import the library via its url. You can use ",Object(i.b)("em",{parentName:"p"},"Http4ts")," by importing the following url:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"https://raw.githubusercontent.com/http4ts/http4ts/v0.1.0/src/deno/mod.ts\n")),Object(i.b)("h3",{id:"binding-to-deno"},"Binding to Deno"),Object(i.b)("p",null,"In order to use this library in Deno, you have to bind the ",Object(i.b)("inlineCode",{parentName:"p"},"HttpHandler")," to the Deno HTTP server. ",Object(i.b)("em",{parentName:"p"},"Http4ts")," supplies a function called ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/http4ts/http4ts/blob/master/src/deno/server.ts"}),Object(i.b)("inlineCode",{parentName:"a"},"toDenoRequestListener"))," to bind an ",Object(i.b)("inlineCode",{parentName:"p"},"HttpHandler")," to the server."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { listenAndServe } from "https://deno.land/std/http/server.ts";\n\nimport {\n  HttpRequest,\n  HttpStatus,\n  toDenoRequestListener,\n  stringBody,\n  res\n} from "https://raw.githubusercontent.com/http4ts/http4ts/v0.1.0/src/deno/mod.ts";\n\nasync function handler(req: HttpRequest) {  // 1. Write the handler as a function that returns response\n  return res({\n    body: stringBody("Hello world!"),\n    status: HttpStatus.OK\n  });\n}\n\nconsole.log("Listening on http://localhost:8000");\nawait listenAndServe({ port: 8000 }, toDenoRequestListener(handler));\n')),Object(i.b)("p",null,"You can also run this example by executing the following command in your shell environment:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"deno run --allow-net https://raw.githubusercontent.com/http4ts/http4ts/v0.1.0/src/deno/examples/readme-example.ts\n")))),Object(i.b)("h2",{id:"example-project"},"Example Project"),Object(i.b)("p",null,"We have implemented the famous ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/gothinkster/realworld"}),"realworld backend")," for you to compare the code with other http libraries in node.js. You can find this example ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/http4ts/http4ts-realworld-example-app"}),"here"),"."))}w.isMDXComponent=!0},145:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},b=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(n),d=r,m=b["".concat(s,".").concat(d)]||b[d]||u[d]||o;return n?a.a.createElement(m,i({ref:t},p,{components:n})):a.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},147:function(e,t,n){var r;!function(){"use strict";var n={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var o=typeof r;if("string"===o||"number"===o)e.push(r);else if(Array.isArray(r)&&r.length){var s=a.apply(null,r);s&&e.push(s)}else if("object"===o)for(var i in r)n.call(r,i)&&r[i]&&e.push(i)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(t,[]))||(e.exports=r)}()},154:function(e,t,n){"use strict";var r=n(0);const a=Object(r.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{}});t.a=a}}]);